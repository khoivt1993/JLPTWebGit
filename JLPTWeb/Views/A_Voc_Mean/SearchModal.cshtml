@model IEnumerable<JLPTWeb.ViewModels.VocSenViewModel>

<!-- Modal -->
<div class="modal-content" style="width:80%; margin:0 auto;">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
    </div>
        <div class="col-md-12" style="margin-bottom:10px;">
            @{
                bool searchFlg = false;
                if (Model != null && Model.Any())
                {
                    <div class="wrap-search">
                        @{
                            searchFlg = true;
                            String contentTemp = "";
                            String meanTemp = "";
                            foreach (var item in Model)
                            {
                                if (!contentTemp.Equals(item.VocContent))
                                {
                                    contentTemp = item.VocContent;
                                    <h1 class="nihon-text-big" style="margin-bottom:0px;">
                                        <strong>
                                            @Html.DisplayFor(modelItem => item.VocContent)
                                            <span class="glyphicon glyphicon-minus"></span> @Html.DisplayFor(modelItem => item.VocHiragana)
                                            【@Html.DisplayFor(modelItem => item.VocKanji)】
                                        </strong>
                                    </h1>
                                }
                                if (!meanTemp.Equals(item.MeanContent))
                                {
                                    meanTemp = item.MeanContent;
                                    <div class="mean-text">
                                        <div style="background-color:#f5f5f5; line-height:25px">@Html.DisplayFor(modelItem => item.VocKind)</div>
                                    </div>
                                    <div class="mean-text">
                                        <div style="background-color:#edc4c4; line-height:25px">@Html.DisplayFor(modelItem => item.MeanContent)</div>
                                    </div>
                                    if (item.Sentence != null)
                                    {
                                        <div class="col-md-12"><hr style="width:100%;border-width:2px;border-color:#CD5C5C" /></div>
                                    }
                                }
                                if (item.Sentence != null)
                                {
                                    <div class="nihon-example">
                                        <span class="glyphicon glyphicon-hand-right"></span> @Html.DisplayFor(modelItem => item.Sentence)
                                    </div>
                                    <div class="search-mean">
                                        @Html.DisplayFor(modelItem => item.MeanSenContent)
                                    </div>
                                }
                            }
                        }
                    </div>
                            }
                            IQueryable<JLPTWeb.ViewModels.SenViewModel>
                                    lstSenMean = ViewBag.LstSenMean;
                            if (lstSenMean != null && lstSenMean.Any())
                            {
                                searchFlg = true;
                                <h3>Ví dụ tham khảo thêm</h3>
                                <div class="wrap-search">
                                    @{
                                        foreach (var item in lstSenMean)
                                        {
                                            <div class="nihon-example">
                                                <span class="glyphicon glyphicon-hand-right"></span> @Html.DisplayFor(modelItem => item.Sentence)
                                            </div>
                                            <div class="search-mean">
                                                @Html.DisplayFor(modelItem => item.MeanSenContent)
                                            </div>
                                        }
                                    }
                                </div>
                                        }
                                        if (searchFlg == false && ViewBag.LstSenMean != null)
                                        {
                                            <p>Không tìm thấy kết quả. Trang sẽ sớm cập nhật. </p>
                                        }
            }
        </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
    </div>
</div>
